---
title: "The Art of Readiable R code"
author: "Angel Feliz"
editor: source
format: 
  html:
    fig-width: 12
    fig-height: 8
    fig-align: "center"
    toc: true
    toc-title: Index
    toc-location: left
    self-contained: true
    number-sections: true
    smooth-scroll: true
image: "readable-code-book.jpg"
categories: [Learning Journey]
---

<style>

code{color: #0c5bd1;}

.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

</style>

# Introduction {.unnumbered}

When we start our journey as a programmers it's normal to get exited by the new positives. We get the capacity to do many things that otherwise would be impossible, making projects faster and assuring consistency.

But the problems start when you need to modify a script that you wrote 6 in the past. That's when you found out that you don't remember why you were applying some specific filters or calculating a value in a odd way.

As a Reporting Analyst and I am always creating and changing scripts and after applying the tips provided in the book I could reduce the time needed to apply changes from 5 to 2 days (60% faster.)

<img src="readable-code-book.jpg" alt="Source: https://www.amazon.com/Art-Readable-Code-Practical-Techniques/dp/0596802293" class="center">


# General qualities of readable code

Before giving any trick it is really useful to have a general picture of our code should look like.

1. Code should be written to minimize the time it would take for someone else to understand it. So nobody should read your code twice to understand what it does.

2. Having explicit names for variables and functions is more important than writing a good comment.

3. After reading a comment the reader should know as much as the writer did. Not just explaining what the code does, instead explaining reason outside the code.


